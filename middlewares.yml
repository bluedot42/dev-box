version: "3.8"

services:
  mysql:
    image: mysql
    ports:
      - "3306:3306"
    environment:
      MYSQL_ROOT_PASSWORD: "root"
      TZ: 'Asia/Hong_Kong'
    volumes:
      - ./config/mysql/mysql.cnf:/etc/mysql/conf.d/mysql.cnf:ro #configuration file
      - ./data/mysql:/var/lib/mysql #mysql database files
    command: --default-authentication-plugin=mysql_native_password
    restart: always

  mongodb:
    image: mongo:4.2.6
    container_name: mongo_db
    ports:
      - "27017-27019:27017-27019"
    environment:
      - MONGO_INITDB_Database = default database
      - MONGO_INITDB_ROOT_Username = your root administrator name
      - MONGO_INITDB_ROOT_Password = your root administrator name and password
    volumes:
      - ./mongo/init-mongo.js:/docker-entrypoint-initdb.d/init-mongo.js:ro
      - ./mongo/mongo-volume:/data/db
    restart: always

  mongo-express:
    image: mongo-express
    ports:
      - 8081:8081
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: root
      ME_CONFIG_MONGODB_ADMINPASSWORD: example
    restart: always
      
  redis:
    image: redis:alpine
    ports:
      - "6379:6379"
    volumes:
      - ./data/redis:/data
      
  nginx:
    image: nginx:latest
    container_name: nginx
    ports:
      - "8000:80"
      - "443"
    volumes:
      - ./docker/nginx/nginx.conf:/etc/nginx/conf.d/default
      - ./docker/nginx/nginx.conf:/etc/nginx/sites-available/default
    links:
      - app
    env_file: ./.env
    
  rabbitmq:
    image: rabbitmq:3.8.9
    ports:
      - '15672:15672'
      - '5672:5672'
      
volumes:
  mongo-data:
  networks:
  test-network: